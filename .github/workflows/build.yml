name: Build

# Thanks
# https://github.com/emacs-tree-sitter/elisp-tree-sitter/blob/master/.github/workflows/release.yml

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  Build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os || 'ubuntu-22.04' }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-linux-android
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
        include:
          - os: macos-11
            target: aarch64-apple-darwin
          - os: macos-11
            target: x86_64-apple-darwin
    env:
      TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        run: |
          rustup install stable
      - name: Build with Cross
        if: ${{ !matrix.os }}
        run: |
          # Install not-yet-released Cross for Android builds
          # https://github.com/cross-rs/cross/issues/1222
          # Essentially
          # - Rust 1.68 bumped the Android NDK version
          # - Cross needs to be updated to address that, and has been, but the fix hasn't made its
          #   way to a release
          cargo install cross --git "https://github.com/cross-rs/cross" --branch main
          rustup target add "$TARGET"
          cross build --target "$TARGET" --release
      - name: Build without Cross
        if: ${{ matrix.os }}
        run: |
          rustup target add "$TARGET"
          cargo build --target "$TARGET" --release
      - name: Rename result
        run: |
          npm install -g renamer
          find target/"$TARGET"/release \
            -maxdepth 1 -type f \
            \( -name "*.so" \
               -or -name "*.dylib" \
               -or -name "*.dll" \) \
            -execdir \
              renamer --path-element name \
                -f "/.*/" -r "$TARGET" \
                '{}' ';'
      - uses: actions/upload-artifact@v3
        with:
          # An artifact is like a bucket, and this is how you upload multiple files from multiple
          # jobs into the same artifact (using the same name).
          name: artifact
          path: |
            target/${{ matrix.target }}/release/*.so
            target/${{ matrix.target }}/release/*.dylib
            target/${{ matrix.target }}/release/*.dll

  Release:
    needs: Build
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: artifact
      - run: ls -R
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          generate_release_notes: true
          files: |
            *.so
            *.dylib
            *.dll

# Possibly reasonable Cross targets:
# aarch64-linux-android
# aarch64-unknown-linux-gnu
# aarch64-unknown-linux-musl
# armv7-linux-androideabi
# armv7-unknown-linux-gnueabi
# armv7-unknown-linux-gnueabihf
# armv7-unknown-linux-musleabi
# armv7-unknown-linux-musleabihf
# i686-pc-windows-gnu
# i686-unknown-linux-gnu
# mips-unknown-linux-gnu
# mips-unknown-linux-musl
# mips64-unknown-linux-gnuabi64
# mips64-unknown-linux-muslabi64
# mips64el-unknown-linux-gnuabi64
# mips64el-unknown-linux-muslabi64
# mipsel-unknown-linux-gnu
# mipsel-unknown-linux-musl
# powerpc-unknown-linux-gnu
# powerpc64-unknown-linux-gnu
# powerpc64le-unknown-linux-gnu
# riscv64gc-unknown-linux-gnu
# s390x-unknown-linux-gnu
# sparc64-unknown-linux-gnu
# sparcv9-sun-solaris
# thumbv7neon-linux-androideabi
# thumbv7neon-unknown-linux-gnueabihf
# x86_64-linux-android
# x86_64-pc-windows-gnu
# x86_64-sun-solaris
# x86_64-unknown-freebsd
# x86_64-unknown-illumos
# x86_64-unknown-linux-gnu
# x86_64-unknown-linux-musl
# x86_64-unknown-netbsd
